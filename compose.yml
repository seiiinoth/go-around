services:
  watchtower:
    image: containrrr/watchtower:1.7.1
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  telegram:
    build:
      context: ./telegram
      dockerfile: Dockerfile
    environment:
      - BotConfiguration__BotToken
      - GoogleCloud__ApiKey
      - ConnectionStrings__RedisCache
      - ConnectionStrings__RedisStore
    restart: unless-stopped
    depends_on:
      redis-cache:
        condition: service_started
      redis-store:
        condition: service_started
    networks:
      - local
    develop:
      watch:
        - action: rebuild
          path: ./telegram
          ignore:
            - bin/
            - obj/

  redis-cache:
    image: redis:8.0-M02
    ports:
      - "${REDIS_CACHE_EXTERNAL_PORT:-6378}:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./backups/redis-cache:/data
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_CACHE_PASSWORD:?error}
    networks:
      - local

  redis-store:
    image: redis:8.0-M02
    ports:
      - "${REDIS_STORE_EXTERNAL_PORT:-6379}:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./backups/redis-store:/data
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_STORE_PASSWORD:?error}
    networks:
      - local

networks:
  local:
    driver: bridge
